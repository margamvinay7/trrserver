generator client {
    provider="prisma-client-js"
    // binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
    provider = "mysql"
    url=env("DATABASE_URL")
    // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Admin {
    
    username String @unique
    password String 
}

model Student {
    id String @id
    fullName String
    rollNo Int?
    email String?
    mobile String?
    gender String?
    year String
    joiningyear String?
    address String?
    image Bytes?
    academicyear String
    Attendence Attendence[]
    Assessment Assessment[]
    password String?
    role String @default("student")

}




model Timetable {
    id String @id @default(uuid())
    year String
academicyear String
    Days Days[]
}

model Days{
id String @id @default(uuid())
day String
Timetable Timetable @relation(fields: [timetableId],references: [id])
    timetableId String
Periods Periods[]
}

model Periods{
    id Int @id @default(autoincrement())
    Days Days @relation(fields: [daysId],references: [id])
 daysId String
    time String
    subject String
}



model Attendence {
  id          String  @id @default(uuid())

  Student       Student  @relation(fields: [studentId], references: [id])
  studentId     String
  date DateTime
  year String?
  academicyear String?
  Subject Subject[]
}

model Subject{
    id Int @id @default(autoincrement())
    Attendence Attendence @relation(fields: [attendenceId],references: [id])
    attendenceId String
    time String
    subject String
    present Boolean @default(false)
}

model Assessment{
    id String @id @default(uuid())
    Student       Student  @relation(fields: [studentId], references: [id])
    studentId     String
    year String?
    studentName String?
    name String?
    status String?
    academicyear String?
    assessment String
    AssessmentSubject AssessmentSubject[]
} 


model AssessmentSubject{
    id String @id @default(uuid())
    Assessment Assessment @relation(fields:[assessmentId],references: [id])
    assessmentId String
    subject String
    theoryMarks Int?
    practicalMarks Int?
}


